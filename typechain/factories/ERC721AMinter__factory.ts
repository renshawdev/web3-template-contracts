/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721AMinter, ERC721AMinterInterface } from "../ERC721AMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "hiddenMetadataURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "developer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AdminAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughEtherSent",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTheTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "QueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "SupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TooFewAdmins",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "adminMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "adminTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "publicSaleActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revealed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxPerMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721AMinter.Config",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "presaleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "presalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicSaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "numerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "setDeveloperAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPublicPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePreSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePublicSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526109c4600e55600a601455601e601555612710601655662386f26fc1000060175566470de4df8200006018553480156200003d57600080fd5b5060405162003345380380620033458339810160408190526200006091620003e1565b845185908590620000799060029060208501906200026e565b5080516200008f9060039060208401906200026e565b506001600055505060408051808201909152338082526103e8602090920191909152607d60a31b17600855620000c53362000131565b600a805460ff60a01b19169055620000dd3362000183565b620000e88262000183565b600b80546001600160a01b0319166001600160a01b0384161790558251620001189060139060208601906200026e565b508015620001265760168190555b5050505050620004f3565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200018e816200020e565b15620001ad576040516308a07bb960e41b815260040160405180910390fd5b600f80546001600160a01b039092166000818152600c60205260408120849055600184018355919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290910180546001600160a01b0319169091179055565b600f546000906200022157506000919050565b6001600160a01b0382166000818152600c6020526040902054600f80549091908110620002525762000252620004a0565b6000918252602090912001546001600160a01b03161492915050565b8280546200027c90620004b6565b90600052602060002090601f016020900481019282620002a05760008555620002eb565b82601f10620002bb57805160ff1916838001178555620002eb565b82800160010185558215620002eb579182015b82811115620002eb578251825591602001919060010190620002ce565b50620002f9929150620002fd565b5090565b5b80821115620002f95760008155600101620002fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200033c57600080fd5b81516001600160401b038082111562000359576200035962000314565b604051601f8301601f19908116603f0116810190828211818310171562000384576200038462000314565b81604052838152602092508683858801011115620003a157600080fd5b600091505b83821015620003c55785820183015181830184015290820190620003a6565b83821115620003d75760008385830101525b9695505050505050565b600080600080600060a08688031215620003fa57600080fd5b85516001600160401b03808211156200041257600080fd5b6200042089838a016200032a565b965060208801519150808211156200043757600080fd5b6200044589838a016200032a565b955060408801519150808211156200045c57600080fd5b506200046b888289016200032a565b606088015190945090506001600160a01b03811681146200048b57600080fd5b80925050608086015190509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620004cb57607f821691505b60208210811415620004ed57634e487b7160e01b600052602260045260246000fd5b50919050565b612e4280620005036000396000f3fe6080604052600436106103535760003560e01c806370a08231116101c6578063bc8893b4116100f7578063d5abeb0111610095578063e58306f91161006f578063e58306f9146109d9578063e8a3d485146109ec578063e985e9c514610a01578063f2fde38b14610a4a57600080fd5b8063d5abeb011461098e578063dcc345f2146109a4578063e222c7f9146109c457600080fd5b8063c6275255116100d1578063c627525514610926578063c87b56dd14610946578063c9b298f114610966578063ca3cb5221461097957600080fd5b8063bc8893b414610863578063c23dc68f1461087d578063c3f909d4146108aa57600080fd5b806395d89b4111610164578063a22cb4651161013e578063a22cb465146107f8578063a945bf8014610818578063b88d4fde1461082e578063ba9e12f71461084e57600080fd5b806395d89b41146107b057806399a2557a146107c5578063a0712d68146107e557600080fd5b80638462151c116101a05780638462151c146107255780638da5cb5b146107525780638e4bbb8f14610770578063938e3d7b1461079057600080fd5b806370a08231146106db578063715018a6146106fb5780638456cb591461071057600080fd5b80633ccfd60b116102a057806353135ca01161023e5780635c975abb116102185780635c975abb146106675780636352211e146106865780636c0360eb146106a657806370480275146106bb57600080fd5b806353135ca0146105fb57806355f804b31461061a5780635bbb21771461063a57600080fd5b806342966c681161027a57806342966c681461058f578063453c2310146105af578063507e094f146105c5578063512507c6146105db57600080fd5b80633ccfd60b146105455780633f4ba83a1461055a57806342842e0e1461056f57600080fd5b806314bfd6d01161030d57806323b872dd116102e757806323b872dd146104b157806324d7806c146104d15780632a55205a146104f15780632b7832b31461053057600080fd5b806314bfd6d0146104545780631785f53c1461047457806318160ddd1461049457600080fd5b80620e7fa81461035f57806301ffc9a71461038857806304634d8d146103b857806306fdde03146103da578063081812fc146103fc578063095ea7b31461043457600080fd5b3661035a57005b600080fd5b34801561036b57600080fd5b5061037560175481565b6040519081526020015b60405180910390f35b34801561039457600080fd5b506103a86103a33660046126e6565b610a6a565b604051901515815260200161037f565b3480156103c457600080fd5b506103d86103d336600461271f565b610a8a565b005b3480156103e657600080fd5b506103ef610acf565b60405161037f91906127ba565b34801561040857600080fd5b5061041c6104173660046127cd565b610b61565b6040516001600160a01b03909116815260200161037f565b34801561044057600080fd5b506103d861044f3660046127e6565b610ba5565b34801561046057600080fd5b5061041c61046f3660046127cd565b610c45565b34801561048057600080fd5b506103d861048f366004612810565b610c6f565b3480156104a057600080fd5b506001546000540360001901610375565b3480156104bd57600080fd5b506103d86104cc36600461282b565b610e28565b3480156104dd57600080fd5b506103a86104ec366004612810565b610fb1565b3480156104fd57600080fd5b5061051161050c366004612867565b610fbc565b604080516001600160a01b03909316835260208301919091520161037f565b34801561053c57600080fd5b50600f54610375565b34801561055157600080fd5b506103d8611068565b34801561056657600080fd5b506103d8611102565b34801561057b57600080fd5b506103d861058a36600461282b565b611132565b34801561059b57600080fd5b506103d86105aa3660046127cd565b611152565b3480156105bb57600080fd5b5061037560155481565b3480156105d157600080fd5b5061037560145481565b3480156105e757600080fd5b506103d86105f6366004612915565b611198565b34801561060757600080fd5b506010546103a890610100900460ff1681565b34801561062657600080fd5b506103d8610635366004612915565b6111d1565b34801561064657600080fd5b5061065a61065536600461295e565b61120a565b60405161037f9190612a10565b34801561067357600080fd5b50600a54600160a01b900460ff166103a8565b34801561069257600080fd5b5061041c6106a13660046127cd565b6112d6565b3480156106b257600080fd5b506103ef6112e1565b3480156106c757600080fd5b506103d86106d6366004612810565b61136f565b3480156106e757600080fd5b506103756106f6366004612810565b61139e565b34801561070757600080fd5b506103d86113ed565b34801561071c57600080fd5b506103d86113ff565b34801561073157600080fd5b50610745610740366004612810565b61142d565b60405161037f9190612a52565b34801561075e57600080fd5b50600a546001600160a01b031661041c565b34801561077c57600080fd5b506103d861078b366004612810565b61153d565b34801561079c57600080fd5b506103d86107ab366004612915565b61156c565b3480156107bc57600080fd5b506103ef6115a5565b3480156107d157600080fd5b506107456107e0366004612a8a565b6115b4565b6103d86107f33660046127cd565b611740565b34801561080457600080fd5b506103d8610813366004612abd565b6117d5565b34801561082457600080fd5b5061037560185481565b34801561083a57600080fd5b506103d8610849366004612aee565b61186b565b34801561085a57600080fd5b506103ef6118b5565b34801561086f57600080fd5b506010546103a89060ff1681565b34801561088957600080fd5b5061089d6108983660046127cd565b6118c2565b60405161037f9190612b6a565b3480156108b657600080fd5b506108bf61194a565b60405161037f9190600061010082019050825115158252602083015115156020830152604083015115156040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b34801561093257600080fd5b506103d86109413660046127cd565b611a24565b34801561095257600080fd5b506103ef6109613660046127cd565b611a4f565b6103d86109743660046127cd565b611b50565b34801561098557600080fd5b506103d8611bc0565b34801561099a57600080fd5b5061037560165481565b3480156109b057600080fd5b506103d86109bf366004612810565b611be5565b3480156109d057600080fd5b506103d8611c34565b6103d86109e73660046127e6565b611c50565b3480156109f857600080fd5b506103ef611c8d565b348015610a0d57600080fd5b506103a8610a1c366004612b78565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b348015610a5657600080fd5b506103d8610a65366004612810565b611c9a565b6000610a7582611d0c565b80610a845750610a8482611d5a565b92915050565b610a92611d8f565b604080518082019091526001600160a01b0383168082526001600160601b0383166020909201829052600160a01b909102176008555050565b5050565b606060028054610ade90612bab565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0a90612bab565b8015610b575780601f10610b2c57610100808354040283529160200191610b57565b820191906000526020600020905b815481529060010190602001808311610b3a57829003601f168201915b5050505050905090565b6000610b6c82611de9565b610b89576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610bb0826112d6565b9050336001600160a01b03821614610be957610bcc8133610a1c565b610be9576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600f8181548110610c5557600080fd5b6000918252602090912001546001600160a01b0316905081565b610c7833611e1e565b610c9557604051631648fd0160e01b815260040160405180910390fd5b610c9e81610fb1565b610cbb57604051631648fd0160e01b815260040160405180910390fd5b600f5460031115610cdf5760405163a828df7560e01b815260040160405180910390fd5b6001600160a01b0381166000908152600c6020526040902054600f54610d0790600190612bfc565b811415610d4657600f805480610d1f57610d1f612c13565b600082815260209020810160001990810180546001600160a01b0319169055019055610e0d565b600f805460009190610d5a90600190612bfc565b81548110610d6a57610d6a612c29565b60009182526020808320909101546001600160a01b0316808352600c9091526040909120839055600f8054919250829184908110610daa57610daa612c29565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600f805480610de957610de9612c13565b600082815260209020810160001990810180546001600160a01b0319169055019055505b506001600160a01b03166000908152600c6020526040812055565b6000610e3382611e7a565b9050836001600160a01b0316816001600160a01b031614610e665760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054610e928187335b6001600160a01b039081169116811491141790565b610ebd57610ea08633610a1c565b610ebd57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610ee457604051633a954ecd60e21b815260040160405180910390fd5b8015610eef57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b8316610f7a5760018401600081815260046020526040902054610f78576000548114610f785760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b0316600080516020612ded83398151915260405160405180910390a4505050505050565b6000610a8482611e1e565b60008281526009602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916110315750604080518082019091526008546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090611050906001600160601b031687612c3f565b61105a9190612c74565b915196919550909350505050565b611070611d8f565b6000612710600e54476110839190612c3f565b61108d9190612c74565b600b546040519192506001600160a01b03169082156108fc029083906000818181858888f193505050501580156110c8573d6000803e3d6000fd5b50600a546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610acb573d6000803e3d6000fd5b61110b33611e1e565b61112857604051631648fd0160e01b815260040160405180910390fd5b611130611ee3565b565b61114d8383836040518060200160405280600081525061186b565b505050565b61115b816112d6565b6001600160a01b0316326001600160a01b03161461118c5760405163ee83059d60e01b815260040160405180910390fd5b61119581611f38565b50565b6111a133611e1e565b6111be57604051631648fd0160e01b815260040160405180910390fd5b8051610acb906013906020840190612637565b6111da33611e1e565b6111f757604051631648fd0160e01b815260040160405180910390fd5b8051610acb906011906020840190612637565b60608160008167ffffffffffffffff81111561122857611228612889565b60405190808252806020026020018201604052801561127a57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816112465790505b50905060005b8281146112cd576112a886868381811061129c5761129c612c29565b905060200201356118c2565b8282815181106112ba576112ba612c29565b6020908102919091010152600101611280565b50949350505050565b6000610a8482611e7a565b601180546112ee90612bab565b80601f016020809104026020016040519081016040528092919081815260200182805461131a90612bab565b80156113675780601f1061133c57610100808354040283529160200191611367565b820191906000526020600020905b81548152906001019060200180831161134a57829003601f168201915b505050505081565b61137833611e1e565b61139557604051631648fd0160e01b815260040160405180910390fd5b61119581611f43565b60006001600160a01b0382166113c7576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6113f5611d8f565b6111306000611fcb565b61140833611e1e565b61142557604051631648fd0160e01b815260040160405180910390fd5b61113061201d565b6060600080600061143d8561139e565b905060008167ffffffffffffffff81111561145a5761145a612889565b604051908082528060200260200182016040528015611483578160200160208202803683370190505b5090506114b060408051608081018252600080825260208201819052918101829052606081019190915290565b60015b838614611531576114c381612060565b91508160400151156114d457611529565b81516001600160a01b0316156114e957815194505b876001600160a01b0316856001600160a01b03161415611529578083878060010198508151811061151c5761151c612c29565b6020026020010181815250505b6001016114b3565b50909695505050505050565b61154633611e1e565b61156357604051631648fd0160e01b815260040160405180910390fd5b61119581611fcb565b61157533611e1e565b61159257604051631648fd0160e01b815260040160405180910390fd5b8051610acb906012906020840190612637565b606060038054610ade90612bab565b60608183106115d657604051631960ccad60e11b815260040160405180910390fd5b6000806115e260005490565b905060018510156115f257600194505b808411156115fe578093505b60006116098761139e565b9050848610156116285785850381811015611622578091505b5061162c565b5060005b60008167ffffffffffffffff81111561164757611647612889565b604051908082528060200260200182016040528015611670578160200160208202803683370190505b5090508161168357935061173992505050565b600061168e886118c2565b90506000816040015161169f575080515b885b8881141580156116b15750848714155b1561172d576116bf81612060565b92508260400151156116d057611725565b82516001600160a01b0316156116e557825191505b8a6001600160a01b0316826001600160a01b03161415611725578084888060010199508151811061171857611718612c29565b6020026020010181815250505b6001016116a1565b50505092835250909150505b9392505050565b61174861209c565b60105460ff1661176b5760405163b7b2409760e01b815260040160405180910390fd5b6016546000546000190161177f9083612c88565b111561179e57604051637d3d824960e01b815260040160405180910390fd5b6018546117ab9082612c3f565b3410156117cb57604051637ea94e2960e01b815260040160405180910390fd5b61119533826120e9565b6001600160a01b0382163314156117ff5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611876848484610e28565b6001600160a01b0383163b156118af5761189284848484612103565b6118af576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b601380546112ee90612bab565b604080516080810182526000808252602082018190529181018290526060810191909152604080516080810182526000808252602082018190529181018290526060810191909152600183108061191b57506000548310155b156119265792915050565b61192f83612060565b90508060400151156119415792915050565b611739836121fb565b61199860405180610100016040528060001515815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061010001604052806119b8600a5460ff600160a01b9091041690565b1515815260105460ff161515602082015260118054604090920191600091906119e090612bab565b905011151581526020016014548152602001601554815260200160165481526020016018548152602001611a1d6001546000546000199190030190565b9052919050565b611a2d33611e1e565b611a4a57604051631648fd0160e01b815260040160405180910390fd5b601855565b6060611a5a82611de9565b611a7757604051636c01c8cf60e11b815260040160405180910390fd5b60118054611a8490612bab565b15159050611b1e5760138054611a9990612bab565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac590612bab565b8015611b125780601f10611ae757610100808354040283529160200191611b12565b820191906000526020600020905b815481529060010190602001808311611af557829003601f168201915b50505050509050919050565b6011611b2983612230565b604051602001611b3a929190612cbc565b6040516020818303038152906040529050919050565b611b5861209c565b601054610100900460ff16611b805760405163b7b2409760e01b815260040160405180910390fd5b60165460005460001901611b949083612c88565b1115611bb357604051637d3d824960e01b815260040160405180910390fd5b6017546117ab9082612c3f565b611bc8611d8f565b6010805461ff001981166101009182900460ff1615909102179055565b600b546001600160a01b0316338114611c1157604051631648fd0160e01b815260040160405180910390fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055565b611c3c611d8f565b6010805460ff19811660ff90911615179055565b60165460005460001901611c649083612c88565b1115611c8357604051637d3d824960e01b815260040160405180910390fd5b610acb82826120e9565b601280546112ee90612bab565b611ca2611d8f565b6001600160a01b0381166115635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b60006301ffc9a760e01b6001600160e01b031983161480611d3d57506380ac58cd60e01b6001600160e01b03198316145b80610a845750506001600160e01b031916635b5e139f60e01b1490565b60006001600160e01b0319821663152a902d60e11b1480610a8457506301ffc9a760e01b6001600160e01b0319831614610a84565b600a546001600160a01b031633146111305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611d03565b600081600111158015611dfd575060005482105b8015610a84575050600090815260046020526040902054600160e01b161590565b600f54600090611e3057506000919050565b6001600160a01b0382166000818152600c6020526040902054600f80549091908110611e5e57611e5e612c29565b6000918252602090912001546001600160a01b03161492915050565b60008180600111611eca57600054811015611eca57600081815260046020526040902054600160e01b8116611ec8575b80611739575060001901600081815260046020526040902054611eaa565b505b604051636f96cda160e11b815260040160405180910390fd5b611eeb61232e565b600a805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61119581600061237e565b611f4c81611e1e565b15611f6a576040516308a07bb960e41b815260040160405180910390fd5b600f80546001600160a01b039092166000818152600c60205260408120849055600184018355919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290910180546001600160a01b0319169091179055565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61202561209c565b600a805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611f1b3390565b604080516080810182526000808252602082018190529181018290526060810191909152600082815260046020526040902054610a84906124af565b600a54600160a01b900460ff16156111305760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401611d03565b610acb8282604051806020016040528060008152506124f7565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612138903390899088908890600401612d63565b602060405180830381600087803b15801561215257600080fd5b505af1925050508015612182575060408051601f3d908101601f1916820190925261217f91810190612da0565b60015b6121dd573d8080156121b0576040519150601f19603f3d011682016040523d82523d6000602084013e6121b5565b606091505b5080516121d5576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b604080516080810182526000808252602082018190529181018290526060810191909152610a8461222b83611e7a565b6124af565b6060816122545750506040805180820190915260018152600360fc1b602082015290565b8160005b811561227e578061226881612dbd565b91506122779050600a83612c74565b9150612258565b60008167ffffffffffffffff81111561229957612299612889565b6040519080825280601f01601f1916602001820160405280156122c3576020820181803683370190505b5090505b84156121f3576122d8600183612bfc565b91506122e5600a86612dd8565b6122f0906030612c88565b60f81b81838151811061230557612305612c29565b60200101906001600160f81b031916908160001a905350612327600a86612c74565b94506122c7565b600a54600160a01b900460ff166111305760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611d03565b600061238983611e7a565b9050806000806123a786600090815260066020526040902080549091565b9150915084156123e7576123bc818433610e7d565b6123e7576123ca8333610a1c565b6123e757604051632ce44b5f60e11b815260040160405180910390fd5b80156123f257600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040902055600160e11b841661247957600186016000818152600460205260409020546124775760005481146124775760008181526004602052604090208590555b505b60405186906000906001600160a01b03861690600080516020612ded833981519152908390a45050600180548101905550505050565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6125018383612564565b6001600160a01b0383163b1561114d576000548281035b61252b6000868380600101945086612103565b612548576040516368d2bf6b60e11b815260040160405180910390fd5b81811061251857816000541461255d57600080fd5b5050505050565b600054816125855760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b17831790558284019083908390600080516020612ded8339815191528180a4600183015b8181146126105780836000600080516020612ded833981519152600080a46001016125ea565b508161262e57604051622e076360e81b815260040160405180910390fd5b60005550505050565b82805461264390612bab565b90600052602060002090601f01602090048101928261266557600085556126ab565b82601f1061267e57805160ff19168380011785556126ab565b828001600101855582156126ab579182015b828111156126ab578251825591602001919060010190612690565b506126b79291506126bb565b5090565b5b808211156126b757600081556001016126bc565b6001600160e01b03198116811461119557600080fd5b6000602082840312156126f857600080fd5b8135611739816126d0565b80356001600160a01b038116811461271a57600080fd5b919050565b6000806040838503121561273257600080fd5b61273b83612703565b915060208301356001600160601b038116811461275757600080fd5b809150509250929050565b60005b8381101561277d578181015183820152602001612765565b838111156118af5750506000910152565b600081518084526127a6816020860160208601612762565b601f01601f19169290920160200192915050565b602081526000611739602083018461278e565b6000602082840312156127df57600080fd5b5035919050565b600080604083850312156127f957600080fd5b61280283612703565b946020939093013593505050565b60006020828403121561282257600080fd5b61173982612703565b60008060006060848603121561284057600080fd5b61284984612703565b925061285760208501612703565b9150604084013590509250925092565b6000806040838503121561287a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156128ba576128ba612889565b604051601f8501601f19908116603f011681019082821181831017156128e2576128e2612889565b816040528093508581528686860111156128fb57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561292757600080fd5b813567ffffffffffffffff81111561293e57600080fd5b8201601f8101841361294f57600080fd5b6121f38482356020840161289f565b6000806020838503121561297157600080fd5b823567ffffffffffffffff8082111561298957600080fd5b818501915085601f83011261299d57600080fd5b8135818111156129ac57600080fd5b8660208260051b85010111156129c157600080fd5b60209290920196919550909350505050565b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b8181101561153157612a3f8385516129d3565b9284019260809290920191600101612a2c565b6020808252825182820181905260009190848201906040850190845b8181101561153157835183529284019291840191600101612a6e565b600080600060608486031215612a9f57600080fd5b612aa884612703565b95602085013595506040909401359392505050565b60008060408385031215612ad057600080fd5b612ad983612703565b91506020830135801515811461275757600080fd5b60008060008060808587031215612b0457600080fd5b612b0d85612703565b9350612b1b60208601612703565b925060408501359150606085013567ffffffffffffffff811115612b3e57600080fd5b8501601f81018713612b4f57600080fd5b612b5e8782356020840161289f565b91505092959194509250565b60808101610a8482846129d3565b60008060408385031215612b8b57600080fd5b612b9483612703565b9150612ba260208401612703565b90509250929050565b600181811c90821680612bbf57607f821691505b60208210811415612be057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612c0e57612c0e612be6565b500390565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612c5957612c59612be6565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612c8357612c83612c5e565b500490565b60008219821115612c9b57612c9b612be6565b500190565b60008151612cb2818560208601612762565b9290920192915050565b600080845481600182811c915080831680612cd857607f831692505b6020808410821415612cf857634e487b7160e01b86526022600452602486fd5b818015612d0c5760018114612d1d57612d4a565b60ff19861689528489019650612d4a565b60008b81526020902060005b86811015612d425781548b820152908501908301612d29565b505084890196505b505050505050612d5a8185612ca0565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d969083018461278e565b9695505050505050565b600060208284031215612db257600080fd5b8151611739816126d0565b6000600019821415612dd157612dd1612be6565b5060010190565b600082612de757612de7612c5e565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205f2e31dc724484a1e40db488a95f21628bd7d2b7331953160b0ef3c379a3157664736f6c63430008090033";

export class ERC721AMinter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    hiddenMetadataURI_: string,
    developer: string,
    maxSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721AMinter> {
    return super.deploy(
      name,
      symbol,
      hiddenMetadataURI_,
      developer,
      maxSupply_,
      overrides || {}
    ) as Promise<ERC721AMinter>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    hiddenMetadataURI_: string,
    developer: string,
    maxSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      hiddenMetadataURI_,
      developer,
      maxSupply_,
      overrides || {}
    );
  }
  attach(address: string): ERC721AMinter {
    return super.attach(address) as ERC721AMinter;
  }
  connect(signer: Signer): ERC721AMinter__factory {
    return super.connect(signer) as ERC721AMinter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AMinterInterface {
    return new utils.Interface(_abi) as ERC721AMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AMinter {
    return new Contract(address, _abi, signerOrProvider) as ERC721AMinter;
  }
}
